{
  "version": 3,
  "sources": ["../../../app/routes/home.tsx", "../../../app/components/user-panel.tsx", "../../../app/components/search-bar.tsx", "../../../app/components/recent-bar.tsx"],
  "sourcesContent": ["import { json, LoaderFunction } from '@remix-run/node'\nimport { getOtherUsers } from '~/utils/user.server'\nimport { requireUserId, getUser } from '~/utils/auth.server'\nimport { Layout } from '~/components/layout'\nimport { UserPanel } from '~/components/user-panel';\nimport { useLoaderData, Outlet } from '@remix-run/react';\n\nimport { Kudo } from '~/components/kudo';\nimport { Kudo as IKudo, Profile, Prisma } from '@prisma/client'\nimport { SearchBar } from '~/components/search-bar';\nimport { getFilteredKudos, getRecentKudos } from '~/utils/kudos.server'\nimport { RecentBar } from '~/components/recent-bar';\n\ninterface KudoWithAuthor extends IKudo {\n    author: {\n        profile: Profile\n    }\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const userId = await requireUserId(request);\n    const users = await getOtherUsers(userId)\n\n    // Pull out our search & sort criteria\n    const url = new URL(request.url);\n    const sort = url.searchParams.get(\"sort\");\n    const filter = url.searchParams.get(\"filter\");\n    let sortOptions: Prisma.KudoOrderByWithRelationInput = {}\n    if (sort) {\n        if (sort === 'date') {\n            sortOptions = {\n                createdAt: 'desc'\n            }\n        }\n        if (sort === 'sender') {\n            sortOptions = {\n                author: {\n                    profile: {\n                        firstName: 'asc'\n                    }\n                }\n            }\n        }\n        if (sort === 'emoji') {\n            sortOptions = {\n                style: {\n                    emoji: 'asc'\n                }\n            }\n        }\n    }\n\n    let textFilter: Prisma.KudoWhereInput = {}\n    if (filter) {\n        textFilter = {\n            OR: [\n                {\n                    message: {\n                        mode: 'insensitive',\n                        contains: filter\n                    }\n                },\n                {\n                    author: {\n                        OR: [\n                            { profile: { is: { firstName: { mode: 'insensitive', contains: filter } } } },\n                            { profile: { is: { lastName: { mode: 'insensitive', contains: filter } } } },\n                        ]\n                    }\n                },\n            ]\n        }\n    }\n    const kudos = await getFilteredKudos(userId, sortOptions, textFilter)\n    const recentKudos = await getRecentKudos();\n    const user = await getUser(request);\n    return json({ user, users, kudos, recentKudos })\n};\n\nexport default function Home() {\n    const { users, kudos, recentKudos, user } = useLoaderData()\n    return <Layout>\n        <Outlet />\n        <div className=\"h-full flex\">\n            <UserPanel users={users} />\n            <div className=\"flex-1 flex flex-col\">\n                <SearchBar profile={user.profile} />\n                <div className=\"flex-1 flex\">\n                    <div className=\"w-full p-10 flex flex-col gap-y-4\">\n                        {\n                            kudos.map((kudo: KudoWithAuthor) =>\n                                <Kudo key={kudo.id} kudo={kudo} profile={kudo.author.profile} />\n                            )\n                        }\n                    </div>\n                    <RecentBar kudos={recentKudos} />\n                </div>\n            </div>\n        </div>\n    </Layout >\n}\n", "import type { User } from \"@prisma/client\"\nimport { UserCircle } from \"../components/user-circle\"\nimport { useNavigate } from '@remix-run/react'\n\n\n\n\ninterface props {\n    users: User[]\n}\n\nexport function UserPanel({ users }: props) {\n    const navigate = useNavigate()\n    return (\n        <div className=\"w-1/6 bg-green-200 flex flex-col\">\n            <div className=\"text-center bg-blue-700 h-20 flex items-center justify-center\">\n                <h2 className=\"text-xl text-white font-semibold\">My Team</h2>\n                <img className=\"h-16 w-16 m-2 ml-4 cursor-pointer\"\n                    src=\"https://img.icons8.com/plasticine/512/homer-simpson.png\"\n                    alt=\"Sonic Youth On Stage\"></img>\n            </div>\n            <div className=\"flex-1 overflow-y-scroll py-4 flex flex-col gap-y-10\">\n                {users.map((user) =>\n                    <UserCircle\n                        key={user.id}\n                        profile={user.profile}\n                        className=\"h-24 w-24 mx-auto flex-shrink-0\"\n                        onClick={() => navigate(`kudo/${user.id}`)}\n                    />\n                )}\n            </div>\n            <div className=\"text-center p-6 bg-blue-700\">\n                <form action=\"/logout\" method=\"post\">\n                    <button type=\"submit\" className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n                        Sign Out\n                    </button>\n                </form>\n            </div>\n        </div>\n    )\n}", "import { useNavigate, useSearchParams } from \"@remix-run/react\"\nimport { SelectBox } from \"./select-box\"\nimport { sortOptions } from \"~/utils/constants\"\n\nimport { UserCircle } from \"./user-circle\"\nimport type { Profile } from \"@prisma/client\"\n\ninterface props {\n    profile: Profile\n}\n\nexport function SearchBar({ profile }: props) {\n    const navigate = useNavigate()\n    let [searchParams] = useSearchParams();\n\n    const clearFilters = () => {\n        searchParams.delete('filter')\n        searchParams.delete('sort')\n        navigate('/home')\n    }\n\n    return (\n        <form className=\"w-full px-6 flex items-center gap-x-4 border-b-4 border-b-blue-900 border-opacity-30 h-20\">\n            <div className={`flex items-center w-2/5`}>\n                <input type=\"text\" name=\"filter\" className=\"w-full rounded-xl px-3 py-2\" placeholder=\"Search a message or name\" />\n                <svg className=\"w-4 h-4 fill-current text-gray-400 -ml-8\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\" /><path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" /></svg>\n            </div>\n            <SelectBox\n                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n                containerClassName='w-40'\n                name=\"sort\"\n                options={sortOptions}\n            />\n            <button type=\"submit\" className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n                Search\n            </button>\n            {searchParams.get('filter') &&\n                <button onClick={clearFilters} className=\"rounded-xl bg-red-300 font-semibold text-blue-600 px-3 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n                    Clear Filters\n                </button>\n            }\n            <div className=\"flex-1\" />\n            <UserCircle\n                className=\"h-14 w-14 transition duration-300 ease-in-out hover:scale-110 hover:border-2 hover:border-yellow-300\"\n                profile={profile}\n                onClick={() => navigate('profile')}\n            />\n        </form>\n    )\n}", "import type { User, Kudo } from '@prisma/client';\nimport { UserCircle } from './user-circle';\nimport { emojiMap } from '../utils/constants'\n\ninterface KudoWithRecipient extends Kudo {\n    recipient: User\n}\n\nexport function RecentBar({ kudos }: { kudos: KudoWithRecipient[] }) {\n    return (\n        <div className=\"w-1/5 border-l-4 border-l-yellow-300 flex flex-col items-center\">\n            <h2 className=\"text-xl text-yellow-300 font-semibold my-6\">Recent Posts</h2>\n            <div className=\"h-full flex flex-col gap-y-10 mt-10\">\n                {kudos.map((kudo) =>\n                    <div className=\"h-24 w-24 relative\" key={kudo.recipient.id}>\n                        <UserCircle profile={kudo.recipient.profile} className=\"w-20 h-20\" />\n                        <div className=\"h-8 w-8 text-3xl bottom-2 right-4 rounded-full absolute flex justify-center items-center\">\n                            {emojiMap[kudo?.style?.emoji || 'THUMBSUP']}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
