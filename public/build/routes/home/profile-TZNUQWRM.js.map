{
  "version": 3,
  "sources": ["empty-module:~/utils/validators.server", "empty-module:../../utils/auth.server", "empty-module:../../utils/user.server", "../../../../app/routes/home/profile.tsx", "../../../../app/components/image-uploader.tsx"],
  "sourcesContent": ["module.exports = {};", "module.exports = {};", "module.exports = {};", "import type { LoaderFunction } from \"@remix-run/node\";\nimport { Modal } from \"../../components/modal\";\n\nimport { useLoaderData, useActionData } from \"@remix-run/react\"\nimport { useState, useRef, useEffect } from \"react\";\nimport { FormField } from '../../components/form-field'\nimport { departments } from \"../../utils/constants\";\nimport { SelectBox } from \"../../components/select-box\";\n\nimport { validateName } from \"~/utils/validators.server\";\nimport type { ActionFunction } from \"@remix-run/node\"\nimport { redirect, json } from \"@remix-run/node\"\nimport { getUser, requireUserId, logout } from \"../../utils/auth.server\";\nimport type { Department } from \"@prisma/client\";\nimport { ImageUploader } from '../../components/image-uploader'\nimport { updateUser, deleteUser } from \"../../utils/user.server\";\n\n\nexport const action: ActionFunction = async ({ request }) => {\n    const userId = await requireUserId(request);\n    const form = await request.formData();\n\n    let firstName = form.get('firstName')\n    let lastName = form.get('lastName')\n    let department = form.get('department')\n    const action = form.get('_action')\n\n    switch (action) {\n        case 'save':\n            if (\n                typeof firstName !== 'string'\n                || typeof lastName !== 'string'\n                || typeof department !== 'string'\n            ) {\n                return json({ error: `Invalid Form Data` }, { status: 400 });\n            }\n\n            const errors = {\n                firstName: validateName(firstName),\n                lastName: validateName(lastName),\n                department: validateName(department)\n            }\n\n            if (Object.values(errors).some(Boolean))\n                return json({ errors, fields: { department, firstName, lastName } }, { status: 400 });\n\n            await updateUser(userId, {\n                firstName,\n                lastName,\n                department: department as Department\n            })\n            return redirect('/home')\n        case 'delete':\n            await deleteUser(userId)\n            return logout(request)\n        default:\n            return json({ error: `Invalid Form Data` }, { status: 400 });\n    }\n\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    const user = await getUser(request)\n    return json({ user })\n}\n\nexport default function ProfileSettings() {\n    const { user } = useLoaderData()\n    const actionData = useActionData()\n    const [formError, setFormError] = useState(actionData?.error || '')\n    const firstLoad = useRef(true)\n    const [formData, setFormData] = useState({\n        firstName: actionData?.fields?.firstName || user?.profile?.firstName,\n        lastName: actionData?.fields?.lastName || user?.profile?.lastName,\n        department: actionData?.fields?.department || (user?.profile?.department || 'MARKETING'),\n        profilePicture: user?.profile?.profilePicture || ''\n    })\n\n    useEffect(() => {\n        if (!firstLoad.current) {\n            setFormError('')\n        }\n    }, [formData])\n\n    useEffect(() => {\n        firstLoad.current = false\n    }, [])\n\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>, field: string) => {\n        setFormData(form => ({ ...form, [field]: event.target.value }))\n    }\n\n    const handleFileUpload = async (file: File) => {\n        let inputFormData = new FormData()\n        inputFormData.append('profile-pic', file)\n\n        const response = await fetch('/avatar', {\n            method: 'POST',\n            body: inputFormData\n        })\n        const { imageUrl } = await response.json()\n\n        setFormData({\n            ...formData,\n            profilePicture: imageUrl\n        })\n    }\n\n    return (\n        <Modal isOpen={true} className=\"w-1/3\">\n            <div className=\"p-3\">\n                <h2 className=\"text-4xl font-semibold text-blue-600 text-center mb-4\">Your Profile</h2>\n                <div className=\"text-xs font-semibold text-center tracking-wide text-red-500 w-full mb-2\">\n                    {formError}\n                </div>\n                <div className=\"flex\">\n                    <div className=\"w-1/3\">\n                        <ImageUploader onChange={handleFileUpload} imageUrl={formData.profilePicture || ''} />\n                    </div>\n                    <div className=\"flex-1\">\n                        <form method=\"post\" onSubmit={e => !confirm('Are you sure?') ? e.preventDefault() : true}>\n                            <FormField\n                                htmlFor=\"firstName\"\n                                label=\"First Name\"\n                                value={formData.firstName}\n                                onChange={e => handleInputChange(e, 'firstName')}\n                                error={actionData?.errors?.firstName}\n                            />\n                            <FormField\n                                htmlFor=\"lastName\"\n                                label=\"Last Name\"\n                                value={formData.lastName}\n                                onChange={e => handleInputChange(e, 'lastName')}\n                                error={actionData?.errors?.lastName}\n                            />\n                            <SelectBox\n                                className=\"w-full rounded-xl px-3 py-2 text-gray-400\"\n                                id=\"department\"\n                                label=\"Department\"\n                                name=\"department\"\n                                options={departments}\n                                value={formData.department}\n                                onChange={e => handleInputChange(e, 'department')}\n                            />\n                            <button name=\"_action\" value=\"delete\" className=\"rounded-xl w-full bg-red-300 font-semibold text-white mt-4 px-16 py-2 transition duration-300 ease-in-out hover:bg-red-400 hover:-translate-y-1\">\n                                Delete Account\n                            </button>\n                            <div className=\"w-full text-right mt-4\">\n                                <button name=\"_action\" value=\"save\" className=\"rounded-xl bg-yellow-300 font-semibold text-blue-600 px-16 py-2 transition duration-300 ease-in-out hover:bg-yellow-400 hover:-translate-y-1\">\n                                    Save\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </Modal >\n    )\n}", "import React, { useRef, useState } from \"react\";\n\ninterface props {\n    onChange: (file: File) => any,\n    imageUrl?: string\n}\n\nexport const ImageUploader = ({ onChange, imageUrl }: props) => {\n    const [draggingOver, setDraggingOver] = useState(false)\n    const fileInputRef = useRef<HTMLInputElement | null>(null)\n    const dropRef = useRef(null)\n\n    // 1\n    const preventDefaults = (e: React.DragEvent<HTMLDivElement>) => {\n        e.preventDefault()\n        e.stopPropagation()\n    }\n\n    // 2\n    const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n        preventDefaults(e)\n        if (e.dataTransfer.files && e.dataTransfer.files[0]) {\n            onChange(e.dataTransfer.files[0])\n            e.dataTransfer.clearData()\n        }\n    }\n\n    // 3\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (event.currentTarget.files && event.currentTarget.files[0]) {\n            onChange(event.currentTarget.files[0])\n        }\n    }\n\n    // 4\n    return (\n        <div ref={dropRef}\n            className={`${draggingOver ? 'border-4 border-dashed border-yellow-300 border-rounded' : ''} group rounded-full relative w-24 h-24 flex justify-center items-center bg-gray-400 transition duration-300 ease-in-out hover:bg-gray-500 cursor-pointer`}\n            style={{\n                backgroundSize: \"cover\",\n                ...(imageUrl ? { backgroundImage: `url(${imageUrl})` } : {}),\n            }}\n            onDragEnter={() => setDraggingOver(true)}\n            onDragLeave={() => setDraggingOver(false)}\n            onDrag={preventDefaults}\n            onDragStart={preventDefaults}\n            onDragEnd={preventDefaults}\n            onDragOver={preventDefaults}\n            onDrop={handleDrop}\n            onClick={() => fileInputRef.current?.click()}\n        >\n            {\n                imageUrl &&\n                <div className=\"absolute w-full h-full bg-blue-400 opacity-50 rounded-full transition duration-300 ease-in-out group-hover:opacity-0\" />\n            }\n            {\n                <p className=\"font-extrabold text-4xl text-gray-200 cursor-pointer select-none transition duration-300 ease-in-out group-hover:opacity-0 pointer-events-none z-10\">+</p>\n            }\n            <input type=\"file\" ref={fileInputRef} onChange={handleChange} className=\"hidden\" />\n        </div>\n    )\n}"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
