{
  "version": 3,
  "sources": ["../../../app/components/portal.tsx", "../../../app/components/modal.tsx"],
  "sourcesContent": ["import { createPortal } from 'react-dom';\nimport { useState, useEffect } from 'react';\n\ninterface props {\n    children: React.ReactNode,\n    wrapperId: string\n}\n\nconst createWrapper = (wrapperId: string) => {\n    const wrapper = document.createElement('div');\n    wrapper.setAttribute(\"id\", wrapperId);\n    document.body.appendChild(wrapper);\n    return wrapper;\n}\n\nexport const Portal: React.FC<props> = ({ children, wrapperId }) => {\n    const [wrapper, setWrapper] = useState<HTMLElement | null>(null);\n\n    useEffect(() => {\n        let element = document.getElementById(wrapperId);\n        let created = false;\n\n        if (!element) {\n            created = true;\n            element = createWrapper(wrapperId);\n        }\n\n        setWrapper(element);\n\n        return () => {\n            if (created && element?.parentNode) {\n                element.parentNode.removeChild(element);\n            }\n        }\n    }, [wrapperId]);\n\n    if (wrapper === null) return null;\n\n    return createPortal(children, wrapper);\n}", "import { useNavigate } from \"@remix-run/react\";\nimport { Portal } from \"./portal\";\n\ninterface props {\n    children: React.ReactNode,\n    isOpen: boolean,\n    ariaLabel?: string,\n    className?: string\n}\n\nexport const Modal: React.FC<props> = ({ children, isOpen, ariaLabel, className }) => {\n    const navigate = useNavigate()\n    if (!isOpen) return null;\n    return (\n        <Portal wrapperId=\"modal\">\n            <div\n                className=\"fixed inset-0 overflow-y-auto bg-gray-600 bg-opacity-80\"\n                aria-labelledby={ariaLabel ?? \"modal-title\"}\n                role=\"dialog\"\n                aria-modal=\"true\"\n                onClick={() => navigate('/home')}\n            >\n            </div>\n            <div className=\"fixed inset-0 pointer-events-none flex justify-center items-center max-h-screen overflow-scroll\">\n                <div className={`${className} p-4 bg-gray-200 pointer-events-auto max-h-screen md:rounded-xl`}>\n                    {children}\n                </div>\n            </div>\n        </Portal>\n    )\n}"],
  "mappings": ";;;;;;;;;;;;;AAAA,uBAA6B;AAC7B,mBAAoC;AAOpC,IAAM,gBAAgB,CAAC,cAAsB;AACzC,QAAM,UAAU,SAAS,cAAc,KAAK;AAC5C,UAAQ,aAAa,MAAM,SAAS;AACpC,WAAS,KAAK,YAAY,OAAO;AACjC,SAAO;AACX;AAEO,IAAM,SAA0B,CAAC,EAAE,UAAU,UAAU,MAAM;AAChE,QAAM,CAAC,SAAS,UAAU,QAAI,uBAA6B,IAAI;AAE/D,8BAAU,MAAM;AACZ,QAAI,UAAU,SAAS,eAAe,SAAS;AAC/C,QAAI,UAAU;AAEd,QAAI,CAAC,SAAS;AACV,gBAAU;AACV,gBAAU,cAAc,SAAS;AAAA,IACrC;AAEA,eAAW,OAAO;AAElB,WAAO,MAAM;AACT,UAAI,YAAW,mCAAS,aAAY;AAChC,gBAAQ,WAAW,YAAY,OAAO;AAAA,MAC1C;AAAA,IACJ;AAAA,EACJ,GAAG,CAAC,SAAS,CAAC;AAEd,MAAI,YAAY;AAAM,WAAO;AAE7B,aAAO,+BAAa,UAAU,OAAO;AACzC;;;ACxBY;AALL,IAAM,QAAyB,CAAC,EAAE,UAAU,QAAQ,WAAW,UAAU,MAAM;AAClF,QAAM,WAAW,YAAY;AAC7B,MAAI,CAAC;AAAQ,WAAO;AACpB,SACI,mDAAC,UAAO,WAAU,SACd;AAAA;AAAA,MAAC;AAAA;AAAA,QACG,WAAU;AAAA,QACV,mBAAiB,gCAAa;AAAA,QAC9B,MAAK;AAAA,QACL,cAAW;AAAA,QACX,SAAS,MAAM,SAAS,OAAO;AAAA;AAAA,MALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAOA;AAAA,IACA,mDAAC,SAAI,WAAU,mGACX,6DAAC,SAAI,WAAW,GAAG,4EACd,YADL;AAAA;AAAA;AAAA;AAAA,WAEA,KAHJ;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAbJ;AAAA;AAAA;AAAA;AAAA,SAcA;AAER;",
  "names": []
}
